Duplicate  (with repeat value N)
when (1.RRQ 3.DATA in RRQ 3.ACK in RRQ), (1.WRQ 3.DATA in WRQ 3.ACK in WRQ), ERROR to server, ERROR to client
Delayed  (with time value)
when (1.RRQ 3.DATA in RRQ 3.ACK in RRQ), (1.WRQ 3.DATA in WRQ 3.ACK in WRQ), ERROR to server, ERROR to client
Lost (with repeat value N) 
when (1.RRQ 3.DATA in RRQ 3.ACK in RRQ), (1.WRQ 3.DATA in WRQ 3.ACK in WRQ), ERROR to server, ERROR to client

Incorrect TID 
when (1.RRQ 3.DATA in RRQ 3.ACK in RRQ), (1.WRQ 3.DATA in WRQ 3.ACK in WRQ), ERROR to server, ERROR to client

Incorrect Size (> packet len), (< packet len) 
when (1.RRQ 3.DATA in RRQ 3.ACK in RRQ), (1.WRQ 3.DATA in WRQ 3.ACK in WRQ), ERROR to server, ERROR to client

Corrupt Request (Write), field 1,2,3...
Corrupt Data (Write), field 1,2,3...
Corrupt Ack (Write), field 1,2,3...
Corrupt Error (Write), field 1,2,3...

Remove Request (Write), field 1,2,3...
Remove Data (Write), field 1,2,3...
Remove Ack (Write), field 1,2,3...
Remove Error (Write), field 1,2,3...

//example:
//TID not working, an 0KB data was made, transfer wont complete
//option 13333
//possible reason
//"Print log"


Test Case, remove data field from DATA packet
Read request, it works for the first try, then leave the client to an unstable state
//looks removing data field is just like having 0 byte data.. and other side think it is end of file

Test Case, duplicate DATA packet, option 2 1 1 3 3
Result1: read request, file not complete, client shows block# mismatch
Result2: write request, file not complete, server throws exception
//should be fixed in 4ee4e783282b748e8952571772b110c16d07d373 or later
